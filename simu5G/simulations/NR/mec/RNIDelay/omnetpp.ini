[General]
image-path=../../images
output-scalar-file-append = false
sim-time-limit=20s
num-rngs = 3
network = simu5g.simulations.NR.mec.RNIDelay.MultiCell
**.routingRecorder.enabled = false

## Schedulers
**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"


**.cellularNic.channelModel[0].shadowing = false
**.cellularNic.channelModel[0].fading = false

**.mecHost.**.vector-recording = true
**.vector-recording = true


##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  


################ Mobility parameters #####################
# *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = true

############### Number of Resource Blocks ################
**.numBands = ${numBands = 6,10,50,100}

############### Transmission Power ##################
**.ueTxPower = 26
**.eNodeBTxPower = 30

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


######################_ME Host Side_#####################
# resources available
*.mecHost.maxMECApps = 100												#max ME Apps to instantiate
*.mecHost.maxRam = 32GB													#max KBytes of Ram Space 
*.mecHost.maxDisk = 100TB												#max KBytes of Ram Space 
*.mecHost.maxCpuSpeed = 300000											#max percentage of CPU
#----------------------------------------
**.gNodeB*.mecHost = "mecHost"
#

#-------REST Service:---------------
**.hasRNISupport = true
*.mecHost.mecPlatform.numMecServices = 0
*.mecHost.mecPlatform.mecService[0] = "RNIService"
*.mecHost.mecPlatform.mecService[0].localAddress = "mecHost.virtualisationInfrastructure"
*.mecHost.mecPlatform.mecService[0].localPort = 10020

*.mecHost.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost.mecPlatform.mecService[0].requestServiceTime = 15us
*.mecHost.mecPlatform.mecService[0].subscriptionServiceTime = 11us

#############################################################
# Test configuration for handover                           #
#                                                           #
# In this scenario, we consider two eNBs (gNodeB1 and       #
# gNodeB2), which serve two UEs each, at the beginning of   #
# the simulation. ue11 and ue12 are moving from gNodeB1 to  #
# gNodeB2, triggering the handover procedure                #
#############################################################

*.mecHost.mecPlatformManager.mecOrchestrator = ""

[Config Handover-General]
# connect each UE to the gNB only
**.ue*.masterId = 0
**.ue*.macCellId = 0

**.ue1*.nrMacCellId = 1
**.ue1*.nrMasterId = 1
**.ue2*.nrMacCellId = 2
**.ue2*.nrMasterId = 2

# enable handover
*.gNodeB*.cellularNic.phy.enableHandover = true
*.ue*.cellularNic.nrPhy.enableHandover = true


# X2 configuration
*.gNodeB2.numX2Apps = 2    # one x2App per peering gNodeB
*.gNodeB*.numX2Apps = 1    # one x2App per peering gNodeB

*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0" 
*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0" 
*.gNodeB2.x2App[1].client.connectAddress = "gNodeB3%x2ppp0" 
*.gNodeB3.x2App[0].client.connectAddress = "gNodeB2%x2ppp1" 


# positioning and mobility
**.mobility.initFromDisplayString = false

*.gNodeB1.mobility.initialX  = 300m
*.gNodeB1.mobility.initialY = 300m

*.gNodeB2.mobility.initialX  = 500m
*.gNodeB2.mobility.initialY = 300m

*.gNodeB3.mobility.initialX  = 700m
*.gNodeB3.mobility.initialY = 300m



# ue11 and ue12 cross the cell border repeatedly
*.ue11.mobility.initialX = 350m
*.ue11.mobility.initialY = 280m
*.ue11.mobility.speed = 0mps
*.ue11.mobility.initialMovementHeading = 0deg
*.ue11.mobility.typename = "LinearMobility"
*.ue11.mobility.constraintAreaMinX = 250m
*.ue11.mobility.constraintAreaMaxX = 450m

*.ue12.mobility.initialX = 320m
*.ue12.mobility.initialY = 280m
*.ue12.mobility.speed = 0mps
*.ue12.mobility.initialMovementHeading = 0deg
*.ue12.mobility.typename = "LinearMobility"
*.ue12.mobility.constraintAreaMinX = 250m
*.ue12.mobility.constraintAreaMaxX = 450m

# ue21 and ue22 are static
*.ue*.mobility.constraintAreaMaxX = 750m
*.ue*.mobility.constraintAreaMaxY = 400m
*.ue*.mobility.constraintAreaMinX = 50m
*.ue*.mobility.constraintAreaMinY = 100m
*.ue2*.mobility.initialX = uniform(450m,750m)
*.ue2*.mobility.initialY = uniform(100m,400m)
*.ue*.mobility.initialZ = 0m


[Config VoIP-DL2]
extends=Handover-General
sim-time-limit=28s


*.numCars = ${numCars= 1, 5, 15,30 ,50,100}
**.vector-recording = true

**.ue[0].nrMacCellId = 1
**.ue[0].nrMasterId = 1

# connect each UE to the eNB
**.ue[0].macCellId = 0
**.ue[0].masterId = 0


# connect each UE to the eNB
**.ue[1..].nrMacCellId = 2
**.ue[1..].nrMasterId = 2

# connect each UE to the eNB
**.ue[1..].macCellId = 0
**.ue[1..].masterId = 0


*.ue[0].mobility.initialX = 200m
*.ue[0].mobility.initialY = 380m


*.ue[0].mobility.speed = 20mps
*.ue[0].mobility.initialMovementHeading = 0deg
*.ue[0].mobility.typename = "LinearMobility"
*.ue[0].mobility.constraintAreaMinX = 180m
*.ue[0].mobility.constraintAreaMaxX = 850m


# positioning and mobility
#*.ue[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.ue[*].mobility.constraintAreaMaxX = 1000m
*.ue[*].mobility.constraintAreaMaxY = 1000m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[1..].mobility.initialX = uniform(400m,600m)
*.ue[1..].mobility.initialY = uniform(200m,400m)



#============= Application Setup =============

*.ue[*].numApps = 1


#----------------------------------------
# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 1# ${numCars} -1



**.ue[0..].app[*].typename = "UdpVideoStreamClient"
**.ue[0..].app[*].serverAddress = "server"
**.ue[0..].app[*].localPort = 9999
**.ue[0..].app[*].serverPort = 3088
**.ue[0..].app[*].startTime = uniform(0s, 0.02s)

**.server.app[*].typename = "UdpVideoStreamServer"
**.server.app[*].videoSize = 200MiB
**.server.app[*].localPort = 3088
**.server.app[*].sendInterval = ${send = 100ms}
**.server.app[*].packetLen = ${packetLen = 100B, 200B, 300B, 400B, 500B, 600B, 700B, 800B, 900B, 1KiB, 1.5KiB, 2KiB, 5KiB }
#**.server.app[*].packetLen = ${packetLen = 100B, 300B, 400B}
**.mtu = 10000B



[Config Test]
extends=Handover-General
sim-time-limit=28s


*.numCars = 50
**.vector-recording = true

**.ue[0].nrMacCellId = 1
**.ue[0].nrMasterId = 1

# connect each UE to the eNB
**.ue[0].macCellId = 0
**.ue[0].masterId = 0


# connect each UE to the eNB
**.ue[1..].nrMacCellId = 2
**.ue[1..].nrMasterId = 2

# connect each UE to the eNB
**.ue[1..].macCellId = 0
**.ue[1..].masterId = 0


*.ue[0].mobility.initialX = 200m
*.ue[0].mobility.initialY = 380m


*.ue[0].mobility.speed = 20mps
*.ue[0].mobility.initialMovementHeading = 0deg
*.ue[0].mobility.typename = "LinearMobility"
*.ue[0].mobility.constraintAreaMinX = 180m
*.ue[0].mobility.constraintAreaMaxX = 850m


# positioning and mobility
#*.ue[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.ue[*].mobility.constraintAreaMaxX = 1000m
*.ue[*].mobility.constraintAreaMaxY = 1000m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[1..].mobility.initialX = uniform(400m,600m)
*.ue[1..].mobility.initialY = uniform(200m,400m)



#============= Application Setup =============

*.ue[*].numApps = 1

#----------------------------------------
# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 1# ${numCars} -1


**.ue[0..].app[*].typename = "UdpVideoStreamClient"
**.ue[0..].app[*].serverAddress = "server"
**.ue[0..].app[*].localPort = 9999
**.ue[0..].app[*].serverPort = 3088
**.ue[0..].app[*].startTime = uniform(0s, 0.02s)

**.server.app[*].typename = "UdpVideoStreamServer"
**.server.app[*].videoSize = 200MiB
**.server.app[*].localPort = 3088
**.server.app[*].sendInterval = 100ms
**.server.app[*].packetLen = 1KiB
#**.server.app[*].packetLen = ${packetLen = 100B, 300B, 400B}
**.mtu = 10000B